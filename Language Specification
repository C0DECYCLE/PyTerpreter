Language Specification:
	Values:
	    ! Number is int or float !
	    ! Primitives are number, string and boolean (lowercase) !
		! Value cannot be "illegal" !
	Instructions:
		! Open and close new environment !
	Variables:
		- set: ["set", "name", value]: "illegal"
		- get: ["get", "name"]: value
		! Get operation environment bottom to top !
		! Set operation environment top to bottom !
	Mathematical operations:
		- add: ["add", value, value]: value
		- subtract: ["subtract", value, value]: value
		- absolute: ["absolute", value]: value
		- multiply: ["multiply", value, value]: value
		- division: ["divide", value, value]: value
		- power: ["power", value, value]: value
	Conditionals:
		- if: ["if", boolean, instructions, ?else instructions]: "illegal"
	Boolean operations:
		- and: ["and", boolean, boolean]: boolean
		- or: ["or", boolean, boolean]: boolean
		- not: ["not", boolean]: boolean
		- equal: ["equal", value, value]: boolean
		- less: ["less", value, value]: boolean
		- greater: ["greater", value, value]: boolean
		- less equal: ["lessEqual", value, value]: boolean
		- greater equal: ["greaterEqual", value, value]: boolean
	Functions:
		- function: ["function", "parameter"[], instructions]: ["function", "parameter"[], instructions]
	Function operations:
		- call: ["call", ["function", "parameter"[], instructions], value[]]: value
		- ?return: ["return", value]: "illegal"
		! No return then none !
		! Return ends instructions !
		! Return only allowed when environment usage is function !
	Loops:
		- while: ["while", boolean, instructions]: "illegal"
	Array:
		- array: ["array", size]: list
	Array operations:
		- set: ["arraySet", list, index, value]: "illegal"
		- get: ["arrayGet", list, index]: value
	Dictionaries:
		- dictionary: ["dictionary"]: dict
	Dictionary operations:
		- set: ["dictionarySet", dict, "key", value]: "illegal"
		- get: ["dictionaryGet", dict, "key"]: value
		- merge: ["dictionaryMerge", dict, dict]: dict
	Class:
	    - class: ["class", ?inheritance, instructions]: ["class", ?inheritance, instructions]
	    ! Inheritance is entire class definition !
	Class operations:
	    - inherit: ["inherit", "function"]: ["function", "parameter"[], instructions]
	    ! One and only one constructor !
	    ! When inherited instructions get merged and overwritten ones get cached !
	    ! Inherit operation fetches from cache !
	Object:
	    - object: ["object", ["class", ?inheritance, instructions], value[]]: environment
	Object operations:
	    - set: ["objectSet", environment, "name", value]: "illegal"
	    - get: ["objectGet", environment, "name"]: value
	System operations:
		- print: ["print", value]: "illegal"